//
//  MessagesProtocols.swift
//  VK Tosters
//
//  Created programmist_np on 30/01/2020.
//  Copyright © 2020 programmist_np. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import SwiftyJSON

//MARK: Wireframe -
protocol MessagesWireframeProtocol: class {
    func openDialog(user: User)
}
//MARK: Presenter -
protocol MessagesPresenterProtocol: class {
    func start()
    func isReachable() -> Bool
    func onEvent(message: String, _ style: ToastStyle)
    func onError(message: String, _ style: ToastStyle)
    func onLoaded()
    func onTapConversation(index: IndexPath)
    func getLastMessage(index: Int) -> DBLastMessage?
    func getConversation(index: Int) -> DBConversation?
    func getProfiles() -> [DBUser]?
    func getGroups() -> [DBGroup]?
    func getMessagesCount() -> Int?
    func getUnread() -> Int?
}

//MARK: Interactor -
protocol MessagesInteractorProtocol: class {
    var presenter: MessagesPresenterProtocol?  { get set }
    var unread: Int { get }
    func start()
    func readMessage(peerId: String)
}

//MARK: View -
protocol MessagesViewProtocol: class {
    var presenter: MessagesPresenterProtocol?  { get set }
    func getToast(message: String, _ style: ToastStyle)
    func finish()
    func showErrorView(errorText: String)
    func hideErrorView()
    func showLoadingView()
    func hideLoadingView()
    func updateDB()
}
